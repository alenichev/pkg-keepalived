commit bac25d731ba398fc3333f50687c7d6e23c0be31c
Author: Vincent Bernat <bernat@luffy.cx>
Date:   Mon Aug 23 11:55:01 2010 +0200

    core: Infrastructure for SNMP trap support.

diff --git a/doc/KEEPALIVED-MIB b/doc/KEEPALIVED-MIB
index d0d45b4..7c8e33b 100644
--- a/doc/KEEPALIVED-MIB
+++ b/doc/KEEPALIVED-MIB
@@ -9,9 +9,9 @@ KEEPALIVED-MIB DEFINITIONS ::= BEGIN
 IMPORTS
     OBJECT-TYPE, MODULE-IDENTITY,
     Integer32, Unsigned32, Counter32, Counter64,
-    Gauge32, enterprises
+    Gauge32, enterprises, NOTIFICATION-TYPE
         FROM SNMPv2-SMI
-    OBJECT-GROUP, MODULE-COMPLIANCE
+    OBJECT-GROUP, MODULE-COMPLIANCE, NOTIFICATION-GROUP
     	FROM SNMPv2-CONF
     InetAddressType, InetAddress, InetPortNumber,
     InetAddressPrefixLength, InetScopeType
@@ -148,6 +148,14 @@ emailAddress OBJECT-TYPE
 	"Email address to be notified when an alert is raised."
     ::= { emailEntry 2 }
 
+trapEnable OBJECT-TYPE
+    SYNTAX INTEGER { enabled(1), disabled(2) }
+    MAX-ACCESS read-only
+    STATUS current
+    DESCRIPTION
+	"Indicate whether traps should be sent for various events."
+    ::= { global 4 }
+
 linkBeat OBJECT-TYPE
     SYNTAX INTEGER { netlink(1), polling(2) }
     MAX-ACCESS read-only
@@ -1902,6 +1910,7 @@ globalGroup OBJECT-GROUP
 	smtpServerTimeout,
 	emailFrom,
 	emailAddress,
+	trapEnable,
 	linkBeat
     }
     STATUS current
diff --git a/doc/man/man5/keepalived.conf.5 b/doc/man/man5/keepalived.conf.5
index 53856da..f70b1ac 100644
--- a/doc/man/man5/keepalived.conf.5
+++ b/doc/man/man5/keepalived.conf.5
@@ -40,6 +40,7 @@ and
  smtp_connect_timeout 30 # integer, seconds
  router_id my_hostname   # string identifying the machine,
                          # (doesn't have to be hostname).
+ enable_traps            # enable SNMP traps
  }
 
 
diff --git a/keepalived/core/global_data.c b/keepalived/core/global_data.c
index f7525f0..cb36ef7 100644
--- a/keepalived/core/global_data.c
+++ b/keepalived/core/global_data.c
@@ -164,4 +164,10 @@ dump_global_data(conf_data_t * global_data)
 		       data->email_from);
 		dump_list(data->email);
 	}
+#ifdef _WITH_SNMP_
+	if (data->enable_traps)
+		log_message(LOG_INFO, " SNMP Trap enabled");
+	else
+		log_message(LOG_INFO, " SNMP Trap disabled");
+#endif
 }
diff --git a/keepalived/core/global_parser.c b/keepalived/core/global_parser.c
index 763e50f..a9788cf 100644
--- a/keepalived/core/global_parser.c
+++ b/keepalived/core/global_parser.c
@@ -80,6 +80,14 @@ email_handler(vector strvec)
 	free_strvec(email_vec);
 }
 
+#ifdef _WITH_SNMP_
+static void
+trap_handler(vector strvec)
+{
+	data->enable_traps = 1;
+}
+#endif
+
 void
 global_init_keywords(void)
 {
@@ -92,4 +100,7 @@ global_init_keywords(void)
 	install_keyword("smtp_server", &smtpip_handler);
 	install_keyword("smtp_connect_timeout", &smtpto_handler);
 	install_keyword("notification_email", &email_handler);
+#ifdef _WITH_SNMP_
+	install_keyword("enable_traps", &trap_handler);
+#endif
 }
diff --git a/keepalived/core/snmp.c b/keepalived/core/snmp.c
index 5299c45..caa5b18 100644
--- a/keepalived/core/snmp.c
+++ b/keepalived/core/snmp.c
@@ -94,6 +94,7 @@ snmp_header_list_table(struct variable *vp, oid *name, size_t *length,
 #define SNMP_MAIL_SMTPSERVERTIMEOUT 5
 #define SNMP_MAIL_EMAILFROM 6
 #define SNMP_MAIL_EMAILADDRESS 7
+#define SNMP_TRAPS 8
 #define SNMP_LINKBEAT 9
 
 static u_char*
@@ -135,6 +136,9 @@ snmp_scalar(struct variable *vp, oid *name, size_t *length,
 		if (!data->email_from) return NULL;
 		*var_len = strlen(data->email_from);
 		return (u_char *)data->email_from;
+	case SNMP_TRAPS:
+		long_ret = data->enable_traps?1:2;
+		return (u_char *)&long_ret;
 	case SNMP_LINKBEAT:
 		long_ret = data->linkbeat_use_polling?2:1;
 		return (u_char *)&long_ret;
@@ -177,6 +181,8 @@ static struct variable8 global_vars[] = {
 	{SNMP_MAIL_EMAILFROM, ASN_OCTET_STR, RONLY, snmp_scalar, 2, {3, 4}},
 	/* emailTable */
 	{SNMP_MAIL_EMAILADDRESS, ASN_OCTET_STR, RONLY, snmp_mail, 4, {3, 5, 1, 2}},
+	/* trapEnable */
+	{SNMP_TRAPS, ASN_INTEGER, RONLY, snmp_scalar, 1, {4}},
 	/* linkBeat */
 	{SNMP_LINKBEAT, ASN_INTEGER, RONLY, snmp_scalar, 1, {5}},
 };
diff --git a/keepalived/include/global_data.h b/keepalived/include/global_data.h
index 1152924..c4e0b77 100644
--- a/keepalived/include/global_data.h
+++ b/keepalived/include/global_data.h
@@ -51,6 +51,9 @@ typedef struct _conf_data {
 	struct sockaddr_storage smtp_server;
 	long smtp_connection_to;
 	list email;
+#ifdef _WITH_SNMP_
+	int enable_traps;
+#endif
 } conf_data_t;
 
 /* Global vars exported */
diff --git a/keepalived/include/snmp.h b/keepalived/include/snmp.h
index c70234d..f9d3766 100644
--- a/keepalived/include/snmp.h
+++ b/keepalived/include/snmp.h
@@ -37,7 +37,9 @@
 #include "list.h"
 #include "utils.h"
 
-#define GLOBAL_OID {1, 3, 6, 1, 4, 1, 9586, 100, 5, 1}
+#define KEEPALIVED_OID 1, 3, 6, 1, 4, 1, 9586, 100, 5
+#define SNMPTRAP_OID 1, 3, 6, 1, 6, 3, 1, 1, 4, 1, 0
+#define GLOBAL_OID {KEEPALIVED_OID, 1}
 
 /* For net-snmp */
 extern int register_sysORTable(oid *, size_t, const char *);
